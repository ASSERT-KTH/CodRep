response.write("new Wicket.Ajax.AutoComplete('" + id + "','" + getCallbackUrl() + "');");

package wicket.extensions.ajax.markup.html.autocomplete;

import wicket.RequestCycle;
import wicket.Response;
import wicket.ajax.AbstractDefaultAjaxBehavior;
import wicket.ajax.AjaxRequestTarget;
import wicket.markup.html.PackageResourceReference;
import wicket.util.string.JavascriptUtils;

/**
 * @since 1.2
 * 
 * @author Janne Hietam&auml;ki (jannehietamaki)
 */
public abstract class AbstractAutoCompleteBehavior extends AbstractDefaultAjaxBehavior
{
	private static final PackageResourceReference AUTOCOMPLETE_JS = new PackageResourceReference(AutoCompleteBehavior.class, "wicket-autocomplete.js");
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	protected void onRenderHeadInitContribution(Response response)
	{
		super.onRenderHeadInitContribution(response);
		writeJsReference(response, AUTOCOMPLETE_JS);
	}

	protected void onComponentRendered()
	{
		Response response=getComponent().getResponse();
		final String id = getComponent().getMarkupId();
		response.write(JavascriptUtils.SCRIPT_OPEN_TAG);
		response.write("new WicketAutoComplete('"+id+"','"+getCallbackUrl()+"');");
		response.write(JavascriptUtils.SCRIPT_CLOSE_TAG);
	}

	protected void respond(AjaxRequestTarget target){
		final RequestCycle requestCycle = RequestCycle.get();
		final String val = requestCycle.getRequest().getParameter("q");
		onRequest(val, requestCycle);		
	}
	
	/**
	 * Callback for the ajax event generated by the javascript. This is
	 * where we need to generate our response.
	 * 
	 * @param input
	 *            the input entered so far
	 * @param requestCycle
	 *            current request cycle
	 */
	protected abstract void onRequest(String input, RequestCycle requestCycle);
}