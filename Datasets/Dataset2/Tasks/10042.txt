import org.frapuccino.addresscombobox.AddressComboBox;

// The contents of this file are subject to the Mozilla Public License Version
// 1.1
//(the "License"); you may not use this file except in compliance with the
//License. You may obtain a copy of the License at http://www.mozilla.org/MPL/
//
//Software distributed under the License is distributed on an "AS IS" basis,
//WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
//for the specific language governing rights and
//limitations under the License.
//
//The Original Code is "The Columba Project"
//
//The Initial Developers of the Original Code are Frederik Dietz and Timo
// Stich.
//Portions created by Frederik Dietz and Timo Stich are Copyright (C) 2003.
//
//All Rights Reserved.
package org.columba.mail.gui.composer.util;

import javax.swing.JComponent;
import javax.swing.event.CaretEvent;
import javax.swing.event.CaretListener;

import org.columba.core.gui.focus.FocusManager;
import org.columba.core.gui.focus.FocusOwner;
import org.frappucino.addresscombobox.AddressComboBox;

/**
 * Add focus handling including the Edit->Cut/Copy/Paste actions
 * support using a CaretListener to enable/disable actions.
 * 
 * @author fdietz 
 */
public class FocusAddressComboBox extends AddressComboBox implements
		FocusOwner, CaretListener {

	/**
	 *  
	 */
	public FocusAddressComboBox() {
		super();

		//		 register at focus manager
		FocusManager.getInstance().registerComponent(this);

		//		 register caret listener
		getTextEditor().addCaretListener(this);
	}

	/**
	 * @param arg0
	 */
	public FocusAddressComboBox(Object[] arg0) {
		super(arg0);

		//		 register at focus manager
		FocusManager.getInstance().registerComponent(this);

		// register caret listener
		getTextEditor().addCaretListener(this);

	}

	/**
	 * @see org.columba.core.gui.focus.FocusOwner#copy()
	 */
	public void copy() {
		getTextEditor().copy();

	}

	/**
	 * @see org.columba.core.gui.focus.FocusOwner#cut()
	 */
	public void cut() {
		getTextEditor().cut();
	}

	/**
	 * @see org.columba.core.gui.focus.FocusOwner#delete()
	 */
	public void delete() {
		getTextEditor().replaceSelection("");
	}

	/**
	 * @see org.columba.core.gui.focus.FocusOwner#getComponent()
	 */
	public JComponent getComponent() {
		return getTextEditor();
	}

	/**
	 * @see org.columba.core.gui.focus.FocusOwner#isCopyActionEnabled()
	 */
	public boolean isCopyActionEnabled() {
		if (getTextEditor().getSelectedText() == null) {
			return false;
		}

		if (getTextEditor().getSelectedText().length() > 0) {
			return true;
		}

		return false;
	}

	/**
	 * @see org.columba.core.gui.focus.FocusOwner#isCutActionEnabled()
	 */
	public boolean isCutActionEnabled() {
		if (getTextEditor().getSelectedText() == null) {
			return false;
		}

		if (getTextEditor().getSelectedText().length() > 0) {
			return true;
		}

		return false;
	}

	/**
	 * @see org.columba.core.gui.focus.FocusOwner#isDeleteActionEnabled()
	 */
	public boolean isDeleteActionEnabled() {
		if (getTextEditor().getSelectedText() == null) {
			return false;
		}

		if (getTextEditor().getSelectedText().length() > 0) {
			return true;
		}

		return false;
	}

	/**
	 * @see org.columba.core.gui.focus.FocusOwner#isPasteActionEnabled()
	 */
	public boolean isPasteActionEnabled() {
		return true;
	}

	/**
	 * @see org.columba.core.gui.focus.FocusOwner#isRedoActionEnabled()
	 */
	public boolean isRedoActionEnabled() {
		return true;
	}

	/**
	 * @see org.columba.core.gui.focus.FocusOwner#isSelectAllActionEnabled()
	 */
	public boolean isSelectAllActionEnabled() {
		return true;
	}

	/**
	 * @see org.columba.core.gui.focus.FocusOwner#isUndoActionEnabled()
	 */
	public boolean isUndoActionEnabled() {
		return true;
	}

	/**
	 * @see org.columba.core.gui.focus.FocusOwner#paste()
	 */
	public void paste() {
		getTextEditor().paste();
	}

	/**
	 * @see org.columba.core.gui.focus.FocusOwner#redo()
	 */
	public void redo() {
		// TODO (@author fdietz): add redo
	}

	/**
	 * @see org.columba.core.gui.focus.FocusOwner#selectAll()
	 */
	public void selectAll() {
		getTextEditor().selectAll();

	}

	/**
	 * @see org.columba.core.gui.focus.FocusOwner#undo()
	 */
	public void undo() {
		// TODO (@author fdietz): add undo

	}

	/**
	 * @see javax.swing.event.CaretListener#caretUpdate(javax.swing.event.CaretEvent)
	 */
	public void caretUpdate(CaretEvent arg0) {
		FocusManager.getInstance().updateActions();
	}
}
 No newline at end of file