import org.apache.turbine.services.db.util.BasePeer;

package org.tigris.scarab.om;

// JDK classes
import java.util.*;

// Village classes
import com.workingdogs.village.*;

// Turbine classes
import org.apache.turbine.services.security.entity.Group;
import org.apache.turbine.services.db.om.peer.BasePeer;
import org.apache.turbine.services.db.util.Criteria;
import org.apache.turbine.util.*;
import org.apache.turbine.services.security.util.DataBackendException;

// Local classes
import org.tigris.scarab.om.map.*;
import org.tigris.scarab.services.module.ModuleManager;
import org.tigris.scarab.services.module.ModuleEntity;

/** 
  * The skeleton for this class was autogenerated by Torque on:
  *
  * [Wed Feb 28 16:36:26 PST 2001]
  *
  *  You should add additional methods to this class to meet the
  *  application requirements.  This class will only be generated as
  *  long as it does not already exist in the output directory.
  */
public class ModulePeer 
    extends org.tigris.scarab.om.BaseModulePeer
{
    public static Class getOMClass()
        throws Exception
    {
        return ModuleManager.getModuleClass();
    }

    /**
     * Checks if a Group is defined in the system. The name
     * is used as query criteria.
     *
     * @param permission The Group to be checked.
     * @return <code>true</code> if given Group exists in the system.
     * @throws DataBackendException when more than one Group with 
     *         the same name exists.
     * @throws Exception, a generic exception.
     */
    public static boolean checkExists( Group group )
        throws DataBackendException, Exception
    {
        Criteria criteria = new Criteria();
        criteria.addSelectColumn(MODULE_ID);
        String name = ((ModuleEntity)group).getName();
        criteria.add(MODULE_NAME, name);
        criteria.add(PARENT_ID, ((ModuleEntity)group).getParentId());
        Vector results = BasePeer.doSelect(criteria);
        if(results.size() > 1)
        {
            throw new DataBackendException("Multiple groups named '" + 
                name + "' exist!");
        }
        return (results.size()==1);
    }

}
