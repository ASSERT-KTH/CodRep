import org.columba.addressbook.config.AdapterNode;

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Library General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

package org.columba.addressbook.folder;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.columba.core.config.AdapterNode;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

public class ContactCard extends DefaultCard
{

	public ContactCard(Document doc, AdapterNode rootNode)
	{
		super(doc, rootNode);

		if (doc != null)
		{
			if (getRootNode() == null)
			{
				AdapterNode node = new AdapterNode(getDocument());

				this.rootNode = node.getChild(0);

			}
		}
	}

	public ContactCard()
	{
		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();

		try
		{
			DocumentBuilder builder = factory.newDocumentBuilder();
			document = builder.newDocument();

			Element root = (Element) document.createElement("vcard");
			document.appendChild(root);

		}
		catch (ParserConfigurationException pce)
		{
			// Parser with specified options can't be built
			pce.printStackTrace();
		}

		AdapterNode node = new AdapterNode(getDocument());
		this.rootNode = node.getChild(0);
		
	}

	
	
	/*
	public String getTel(String attribut)
	{
		String str = get("TEL", attribut);

		return str;
	}
	*/

}
 No newline at end of file