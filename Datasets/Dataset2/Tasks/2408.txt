table.put("antialiasing", ANTI_ALIASING_DISABLED);

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Library General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

package org.columba.core.gui.themes.thincolumba;

import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.UIDefaults;
import javax.swing.plaf.ColorUIResource;

import org.columba.core.config.ThemeItem;
import org.columba.core.gui.themes.DefaultCTheme;

public class ThinColumbaTheme extends DefaultCTheme {

	private final static Integer ANTI_ALIASING_ENABLED = new Integer(1);
	private final static Integer ANTI_ALIASING_DISABLED = new Integer(0);
	private final static Integer ANTI_ALIASING_MESSAGE_ONLY = new Integer(2);

	private final ColorUIResource secondary1 =
		new ColorUIResource(148, 148, 148);
	private final ColorUIResource secondary2 =
		new ColorUIResource(160, 160, 160);
	private final ColorUIResource secondary3 =
		new ColorUIResource(213, 213, 213);

	private final ColorUIResource primary1 = new ColorUIResource(148, 148, 148);
	private final ColorUIResource primary2 = new ColorUIResource(150, 150, 150);
	private final ColorUIResource primary3 = new ColorUIResource(152, 152, 152);

	private final ColorUIResource foreground;
	private final ColorUIResource background;

	protected static final String thinPackage =
		"org.columba.core.gui.themes.thincolumba.";

	public ThinColumbaTheme(ThemeItem item) {
		super(item);

		foreground = new ColorUIResource(item.getForeground());

		background = new ColorUIResource(item.getBackground());

		// mainFont = mFont;
		// messageFont = eFont;
	}

	// menu border, labels
	protected ColorUIResource getPrimary1() {
		return primary1;
	}

	protected ColorUIResource getPrimary2() {
		return primary2;
	}

	protected ColorUIResource getPrimary3() {
		return primary3;
	}

	protected ColorUIResource getSecondary1() {
		return secondary1;
	}
	protected ColorUIResource getSecondary2() {
		return secondary2;
	}
	protected ColorUIResource getSecondary3() {
		return secondary3;
	}

	public String getName() {
		return "Thin Columba";
	}

	public void addCustomEntriesToTable(UIDefaults table) {
		Object map[] =
			{
				"ButtonUI",
				thinPackage + "ThinButtonUI",
				"CheckBoxUI",
				thinPackage + "ThinCheckBoxUI",
				"CheckBoxMenuItemUI",
				thinPackage + "ThinCheckBoxMenuItemUI",
				"ComboBoxUI",
				thinPackage + "ThinComboBoxUI",
				"DesktopIconUI",
				thinPackage + "ThinDesktopIconUI",
				"EditorPaneUI",
				thinPackage + "ThinEditorPaneUI",
				"FileChooserUI",
				thinPackage + "ThinFileChooserUI",
				"InternalFrameUI",
				thinPackage + "ThinInternalFrameUI",
				"LabelUI",
				thinPackage + "ThinLabelUI",
				"MenuUI",
				thinPackage + "ThinMenuUI",
				"MenuBarUI",
				thinPackage + "ThinMenuBarUI",
				"MenuItemUI",
				thinPackage + "ThinMenuItemUI",
				"PasswordFieldUI",
				thinPackage + "ThinPasswordFieldUI",
				"ProgressBarUI",
				thinPackage + "ThinProgressBarUI",
				"PopupMenuSeparatorUI",
				thinPackage + "ThinPopupMenuSeparatorUI",
				"RadioButtonUI",
				thinPackage + "ThinRadioButtonUI",
				"RadioButtonMenuItemUI",
				thinPackage + "ThinRadioButtonMenuItemUI",
				"ScrollBarUI",
				thinPackage + "ThinScrollBarUI",
				"ScrollPaneUI",
				thinPackage + "ThinScrollPaneUI",
				"SplitPaneUI",
				thinPackage + "ThinSplitPaneUI",
				"SliderUI",
				thinPackage + "ThinSliderUI",
				"SeparatorUI",
				thinPackage + "ThinSeparatorUI",
				"TabbedPaneUI",
				thinPackage + "ThinTabbedPaneUI",
				"TextAreaUI",
				thinPackage + "ThinTextAreaUI",
				"TextFieldUI",
				thinPackage + "ThinTextFieldUI",
				"TextPaneUI",
				thinPackage + "ThinTextPaneUI",
				"ToggleButtonUI",
				thinPackage + "ThinToggleButtonUI",
				"ToolBarUI",
				thinPackage + "ThinToolBarUI",
				"ToolTipUI",
				thinPackage + "ThinToolTipUI",
				"TreeUI",
				thinPackage + "ThinTreeUI" };
		table.putDefaults(map);

		// antialiasing==0 -> no antialiasing
		// antialiasing==1 -> antialiasing of everything
		// antialiasing==2 -> antialiasing for message-component only
		table.put("antialiasing", ANTI_ALIASING_MESSAGE_ONLY);

		table.put("Tree.selectionBackground", background);
		table.put("Table.selectionBackground", background);
		table.put("TextField.selectionBackground", background);
		table.put("TextArea.selectionBackground", background);
		table.put("List.selectionBackground", background);

		table.put("Tree.selectionForeground", foreground);
		table.put("Table.selectionForeground", foreground);
		table.put("TextField.selectionForeground", foreground);
		table.put("TextArea.selectionForeground", foreground);
		table.put("List.selectionForeground", foreground);

		table.put(
			"Menu.selectionBackground",
			new ColorUIResource(235, 235, 235));
		table.put(
			"MenuItem.selectionBackground",
			new ColorUIResource(235, 235, 235));
		table.put(
			"CheckBoxMenuItem.selectionBackground",
			new ColorUIResource(235, 235, 235));
		table.put(
			"RadioButtonMenuItem.selectionBackground",
			new ColorUIResource(235, 235, 235));

		table.put("ToolTip.background", new ColorUIResource(235, 235, 235));

		table.put(
			"SplitPane.border",
			"javax.swing.plaf.metal.MetalBorders$TableHeaderBorder");
		table.put("SplitPane.dividerSize", new Integer(5));
		table.put("SplitPaneDivider.border", null);
		
		table.put("StatusBar.border", new ThinStatusBarBorder() );

		table.put("ScrollBar.width", new Integer(17));
		
		table.put("MenuBar.border", new ThinDefaultBorder());
		
		table.put("ToolBar.border", new ThinDefaultBorder());
		
		/*
		table.put("Menu.checkIcon", new ImageIcon("") );
		table.put("MenuItem.checkIcon", new ImageIcon(""));
		*/
		
		table.put("CheckBoxMenuItem.checkIcon", new ImageIcon(""));
		table.put("RadioButtonMenuItem.checkIcon", new ImageIcon("") );
		
		table.put("MenuItem.acceleratorForeground", getAcceleratorSelectedForeground() );
        table.put("MenuItem.acceleratorSelectionForeground", getAcceleratorSelectedForeground() );
            
		/*
		table.put("CheckBoxMenuItem.border", BorderFactory.createEmptyBorder(1,1,1,1));
		table.put("RadioButtonMenuItem.border", BorderFactory.createEmptyBorder(1,1,1,1) );
		table.put("MenuItem.border", BorderFactory.createEmptyBorder(1,1,1,1) );
		table.put("Menu.border", BorderFactory.createEmptyBorder(2,2,2,2) );
		*/
		
		
		/*
		table.put(
			"SplitPaneUI",
			"org.columba.core.gui.themes.thincolumba.ThinColumbaSplitPaneUI");
		
		
		table.put(
			"ScrollBarUI",
			"org.columba.core.gui.themes.thincolumba.ThinColumbaScrollBarUI");
		
		
		table.put(
			"TreeUI",
			"org.columba.core.gui.themes.thincolumba.ThinColumbaTreeUI");
		
		table.put("MenuBar.border", new ThinColumbaMenuBarBorder());
		
		table.put("ToolBar.border", new ThinColumbaToolBarBorder());
		
		//table.put("MenuItemUI","org.columba.core.gui.themes.thincolumba.ThinColumbaMenuItemUI");
		
		
		table.put("Menu.selectionBackground", new ColorUIResource(235, 235, 235));
		table.put("MenuItem.selectionBackground", new ColorUIResource(235, 235, 235));
		table.put(
			"CheckBoxMenuItem.selectionBackground",
			new ColorUIResource(235, 235, 235));
		table.put(
			"RadioButtonMenuItem.selectionBackground",
			new ColorUIResource(235, 235, 235));
		
		table.put("ToolTip.background", new ColorUIResource(255, 255, 255));
		
		
		table.put("ScrollBar.width", new Integer(15));
		table.put("ScrollBar.allowsAbsolutePositioning", Boolean.FALSE);
		
		
		table.put("SplitPane.dividerSize", new Integer(5));
		table.put("SplitPane.border", null);
		
		table.put("Label.foreground", table.get("textText"));
		
		table.put("ScrollBar.minimumThumbSize", new java.awt.Dimension(15, 15));
		
		table.put("HeaderView.border", new ThinColumbaMessageHeaderBorder());
		
		
		
		table.put("ComboBox.listBackground", new ColorUIResource(255,255,255) );
		
		*/

	}

}
 No newline at end of file