ShutdownManager.getInstance().register(new Runnable() {

//The contents of this file are subject to the Mozilla Public License Version 1.1
//(the "License"); you may not use this file except in compliance with the 
//License. You may obtain a copy of the License at http://www.mozilla.org/MPL/
//
//Software distributed under the License is distributed on an "AS IS" basis,
//WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License 
//for the specific language governing rights and
//limitations under the License.
//
//The Original Code is "The Columba Project"
//
//The Initial Developers of the Original Code are Frederik Dietz and Timo Stich.
//Portions created by Frederik Dietz and Timo Stich are Copyright (C) 2003. 
//
//All Rights Reserved.

package org.columba.core.trayicon;

import java.util.logging.Logger;

import javax.swing.Icon;
import javax.swing.JPopupMenu;

import org.columba.core.gui.action.AboutDialogAction;
import org.columba.core.gui.action.ExitAction;
import org.columba.core.gui.action.OpenNewAddressbookWindowAction;
import org.columba.core.gui.action.OpenNewMailWindowAction;
import org.columba.core.gui.action.ShowHelpAction;
import org.columba.core.gui.menu.CMenuItem;
import org.columba.core.gui.util.ImageLoader;
import org.columba.core.gui.util.SelfClosingPopupMenu;
import org.columba.core.shutdown.ShutdownManager;

/**
 * Uses the JDIC api to add a tray icon to the system default tray.
 * 
 * @author Timo Stich <tstich@users.sourceforge.net>
 */
public class ColumbaTrayIcon {

	private static final Logger LOG = Logger
			.getLogger("org.columba.core.trayicon");

	/**
	 * Default icon for the TrayIcon.
	 */
	public static final Icon DEFAULT_ICON = ImageLoader
			.getImageIcon("trayicon.png");

	private static ColumbaTrayIcon instance = new ColumbaTrayIcon();

	private JPopupMenu menu;
	
	private TrayIconInterface activeIcon;

	protected ColumbaTrayIcon() {
		activeIcon = new DefaultTrayIcon();
		
		initPopupMenu();
	}

	/**
	 * Gets the instance of the ColumbaTrayIcon.
	 * 
	 * @return singleton instance
	 */
	public static ColumbaTrayIcon getInstance() {
		return instance;
	}

	/**
	 * Add the tray icon to the default system tray.
	 *  
	 */
	public void addToSystemTray() {
		activeIcon.addToTray(DEFAULT_ICON, "Columba");
		activeIcon.setPopupMenu(menu);
		
		ShutdownManager.getShutdownManager().register(new Runnable() {
			public void run() {
				ColumbaTrayIcon.getInstance().removeFromSystemTray();
			}

		});
	}

	/**
	 * Sets the tooltip of the tray icon.
	 * 
	 * @param tooltip
	 */
	public void setTooltip(String tooltip) {
		activeIcon.setTooltip(tooltip);
	}

	/**
	 * Sets the icon of the tray icon.
	 * 
	 * @param icon
	 */
	public void setIcon(Icon icon) {
		activeIcon.setIcon(icon);
	}

	/**
	 * Removes the tray icon from the system tray.s
	 */
	public void removeFromSystemTray() {
		activeIcon.removeFromTray();
	}

	private void initPopupMenu() {
		if (menu == null) {
			menu = new SelfClosingPopupMenu();
			menu.add(new CMenuItem(new OpenNewMailWindowAction(null)));
			menu.add(new CMenuItem(new OpenNewAddressbookWindowAction(null)));
			menu.addSeparator();
			menu.add(new CMenuItem(new AboutDialogAction(null)));
			menu.add(new CMenuItem(new ShowHelpAction(null)));
			menu.addSeparator();
			menu.add(new CMenuItem(new ExitAction(null)));
		}
	}

	/**
	 * @return Returns the activeIcon.
	 */
	public TrayIconInterface getActiveIcon() {
		return activeIcon;
	}

	/**
	 * @param activeIcon The activeIcon to set.
	 */
	public void setActiveIcon(TrayIconInterface activeIcon) {
		this.activeIcon = activeIcon;
	}

}
 No newline at end of file