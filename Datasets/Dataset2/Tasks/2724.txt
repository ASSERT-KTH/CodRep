mainClassLoader = new MainClassLoader(Main.class.getClassLoader());

//The contents of this file are subject to the Mozilla Public License Version 1.1
//(the "License"); you may not use this file except in compliance with the 
//License. You may obtain a copy of the License at http://www.mozilla.org/MPL/
//
//Software distributed under the License is distributed on an "AS IS" basis,
//WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License 
//for the specific language governing rights and
//limitations under the License.
//
//The Original Code is "The Columba Project"
//
//The Initial Developers of the Original Code are Frederik Dietz and Timo Stich.
//Portions created by Frederik Dietz and Timo Stich are Copyright (C) 2003. 
//
//All Rights Reserved.

package org.columba.core.main;

import org.columba.core.shutdown.ShutdownManager;

/**
 * Columba's main class used to start the application.
 */
public class Main {

	/**
	 * global classloader used as parent classloader in Columba everywhere
	 */
	public static MainClassLoader mainClassLoader;

	public static void main(String[] args) throws Exception {

		// initialize global class loader
		mainClassLoader = new MainClassLoader(ClassLoader
				.getSystemClassLoader());

		start(args);
	}

	public static void restart(String[] args) throws Exception {
		
		// shutdown Columba 
		ShutdownManager.getInstance().shutdown(0);
		
		// set global class loader to null
		mainClassLoader = null;

		// force object finalization
		System.runFinalization();

		// run garbage collector
		System.gc();

		// startup Columba
		start(args);
	}

	private static void start(String[] args) throws Exception {
		// initialize global class loader
		mainClassLoader = new MainClassLoader(Thread.currentThread().getContextClassLoader());
		Thread.currentThread().setContextClassLoader(mainClassLoader);

		Bootstrap startup = new Bootstrap();
		startup.run(args);
	}

}
 No newline at end of file