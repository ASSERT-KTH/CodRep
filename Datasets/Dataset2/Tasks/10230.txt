import org.frapuccino.addresscombobox.AddressComboBox;

//The contents of this file are subject to the Mozilla Public License Version 1.1
//(the "License"); you may not use this file except in compliance with the 
//License. You may obtain a copy of the License at http://www.mozilla.org/MPL/
//
//Software distributed under the License is distributed on an "AS IS" basis,
//WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License 
//for the specific language governing rights and
//limitations under the License.
//
//The Original Code is "The Columba Project"
//
//The Initial Developers of the Original Code are Frederik Dietz and Timo Stich.
//Portions created by Frederik Dietz and Timo Stich are Copyright (C) 2003. 
//
//All Rights Reserved.ndation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
package org.columba.mail.gui.composer;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JPanel;

import org.columba.addressbook.gui.autocomplete.AddressCollector;
import org.columba.mail.gui.composer.action.AddressbookAction;
import org.columba.mail.gui.composer.util.FocusAddressComboBox;
import org.frappucino.addresscombobox.AddressComboBox;

import com.jgoodies.forms.builder.PanelBuilder;
import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;

/**
 * 
 * @author fdietz
 */
public class HeaderView extends JPanel implements ActionListener {

	private HeaderController controller;

	private JButton toButton;

	private JButton ccButton;

	private JButton bccButton;

	private AddressComboBox toComboBox;

	private AddressComboBox ccComboBox;

	private AddressComboBox bccComboBox;

	public HeaderView(HeaderController controller) {
		super();

		this.controller = controller;

		initComponents();
		
		layoutComponents();
	}

	/**
	 * Init address autocompletion
	 *  
	 */
	public void initAutocompletion() {
		// pass contact data along to AddressComboBox
		toComboBox.setItemProvider(AddressCollector.getInstance());
		ccComboBox.setItemProvider(AddressCollector.getInstance());
		bccComboBox.setItemProvider(AddressCollector.getInstance());
	}

	/**
	 *  
	 */
	protected void layoutComponents() {

		// Create a FormLayout instance.
		FormLayout layout = new FormLayout(
				"max(50dlu;default), 3dlu, fill:default:grow, 2dlu",
				"fill:default, 3dlu, fill:default, 3dlu, fill:default");

		// 3 row
		PanelBuilder builder = new PanelBuilder(this, layout);
		CellConstraints cc = new CellConstraints();

		builder.add(toButton, cc.xy(1, 1));
		builder.add(toComboBox, cc.xy(3, 1));

		builder.add(ccButton, cc.xy(1, 3));
		builder.add(ccComboBox, cc.xy(3, 3));

		builder.add(bccButton, cc.xy(1, 5));
		builder.add(bccComboBox, cc.xy(3, 5));

	}

	protected void initComponents() {

		toButton = new JButton("To:");
		toButton.addActionListener(this);
		ccButton = new JButton("Cc:");
		ccButton.addActionListener(this);
		bccButton = new JButton("Bcc:");
		bccButton.addActionListener(this);

		toComboBox = new FocusAddressComboBox();
		ccComboBox = new FocusAddressComboBox();
		bccComboBox = new FocusAddressComboBox();
	}

	/**
	 * @return Returns the bccComboBox.
	 */
	public AddressComboBox getBccComboBox() {
		return bccComboBox;
	}

	/**
	 * @return Returns the ccComboBox.
	 */
	public AddressComboBox getCcComboBox() {
		return ccComboBox;
	}

	/**
	 * @return Returns the toComboBox.
	 */
	public AddressComboBox getToComboBox() {
		return toComboBox;
	}

	/**
	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
	 */
	public void actionPerformed(ActionEvent arg0) {
		new AddressbookAction(controller.getComposerController())
				.actionPerformed(null);

	}
}
 No newline at end of file