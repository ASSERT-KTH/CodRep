PluginManager.getInstance().initExternalPlugins();

// The contents of this file are subject to the Mozilla Public License Version
// 1.1
//(the "License"); you may not use this file except in compliance with the
//License. You may obtain a copy of the License at http://www.mozilla.org/MPL/
//
//Software distributed under the License is distributed on an "AS IS" basis,
//WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
//for the specific language governing rights and
//limitations under the License.
//
//The Original Code is "The Columba Project"
//
//The Initial Developers of the Original Code are Frederik Dietz and Timo
// Stich.
//Portions created by Frederik Dietz and Timo Stich are Copyright (C) 2003.
//
//All Rights Reserved.
package org.columba.addressbook.folder;

import java.io.File;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

import junit.framework.TestCase;

import org.columba.addressbook.main.AddressbookMain;
import org.columba.core.config.Config;
import org.columba.core.logging.Logging;
import org.columba.core.plugin.PluginManager;
import org.columba.core.shutdown.ShutdownManager;

/**
 * @author fdietz
 *  
 */
public class AbstractFolderTstCase extends TestCase {

	private AddressbookFolder sourceFolder;

	private AddressbookFolder destFolder;

	/** A set with all created folders. */
	private Set folders;

	private static int folderId = 0;

	/**
	 * Constructor for AbstractFolderTestCase.
	 * 
	 * @param arg0
	 */
	public AbstractFolderTstCase(String arg0) {
		super(arg0);

	}

	/*
	 * @see TestCase#setUp()
	 */
	protected void setUp() throws Exception {

		//		 create config-folder
		File file = new File("test_config");
		file.mkdir();

		new Config(file);

		Logging.DEBUG = true;
		Logging.createDefaultHandler();

		ShutdownManager.getInstance();
		
		new AddressbookMain();

		// now load all available plugins
		PluginManager.getInstance().initCorePlugins();

		folders = new HashSet();
		sourceFolder = FolderTstFactory.createFolder(folderId++);
		folders.add(sourceFolder);
		destFolder = FolderTstFactory.createFolder(folderId++);
		folders.add(destFolder);
	}

	/*
	 * @see TestCase#tearDown()
	 */
	protected void tearDown() throws Exception {
		for (Iterator iterator = folders.iterator(); iterator.hasNext();) {
			AbstractFolder folder = (AbstractFolder) iterator.next();
			File f = folder.getDirectoryFile();

			// delete all mails in folder
			File[] list = f.listFiles();

			if (list != null) {
				for (int i = 0; i < list.length; i++) {
					list[i].delete();
				}
			}

			// delete folder
			f.delete();
		}
		new File(FolderTstHelper.homeDirectory + "/folders/").delete();
	}

	/**
	 * @return Returns the destFolder.
	 */
	public AddressbookFolder getDestFolder() {
		return destFolder;
	}

	/**
	 * @return Returns the sourceFolder.
	 */
	public AddressbookFolder getSourceFolder() {
		return sourceFolder;
	}
}
 No newline at end of file